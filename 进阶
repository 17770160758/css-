1.<style>
        /* 找到div的儿子p设置颜色红色 */
        /* 父选择器  后代选择器{}*/
        /* div p{
            color: red;
        } */
        /* div>a{
            color: blue;
        } */
        /* p,div,span,h1{
            color: aqua;
        } */
        /* p.box{
            color: red;
        } */
        a:hover{
            color: red;
            background-color:aqua;
        }
    </style>
    <script>
        /*
            1.后代选择器：空格  语法：选择器1 选择器2{css}（标签的嵌套关系 选择父元素后代中满足条件）
            2.子代选择器：> 语法：选择器1>选择器2{css}
            3.并集选择器：, 语法：选择器1,选择器2{css}
            4.交集选择器：标签.类选择器{css}
            5.hover伪类选择器 语法：选择器：hover{css}（作用：选中鼠标悬停在元素上的状态，设置样式）
            6.Emmet语法
             .标签名 div
             .类选择器 .red
             .id选择器 #one
             .交集选择器 p.red#one
             .子代选择器 ul>li
             .内部文本 ul>li{我是li的内容}
             .创建多个 ul>li*3
             .同级标签  div+p
        */
    </script>
    <!-- <p>这是一个p标签</p> -->
    <!-- <div>
        <p>这是后代选择器</p>
    </div> -->
    <!-- <div>
       <a href="#">这是子代选择器</a>
       <p>
        <a href="#">这是p的儿子</a>
       </p>
    </div> -->
    <!-- <div>div</div>
    <span>span</span>
    <h1>h1</h1>
    <h2>h2</h2> -->
    <!-- <p class="box">这是p标签:box</p>
    <p>ppppp</p>
    <div class="box">这是div标签:box</div> -->
    <a href="#">这是超链接</a>
   2.<style>
        div{
            /* width: 400px;
            height: 400px;
            /* background-color: pink; */
            /* 红绿蓝三原色 rgba a-是透明度0-1 */
            /* background-color: rgba(0,0,0,0.5); */
            /* background-image: url(../img/01.png); */
            width: 400px;
            height: 400px;
            background: pink url(../img/02.png) no-repeat center;
            /* 如果背景图位置是英文单词不颠倒位置 数值会 */
        } 
         <script>
        /*
            1.背景颜色 background-color
            2.背景图片 background-image（bgi） 属性值：background-image：url（'图片的路径'）
            3.背景平铺 属性名：background-repeat（bgr）
             .repeat   水平和垂直方向都平铺（默认值）
             .no-repeat  不平铺
             .repeat-x 沿着水平方向（x轴）平铺
             .repeat-y 沿着垂直方向（y轴）平铺  
            4.背景位置  background-position（bgr）
             .水平方向  left 左对齐  center 居中 right 右对齐
             .垂直方向  top  向上对齐  center 居中 bottom 向下对齐
             .数字+px（坐标） 原点（0，0） 盒子的左上角
              x轴 水平向右  y轴 垂直向下  操作（将图片左上角与坐标点）   
              正数：向右向下移动； 负数：向左向右移动；（注意：背景色和背景图只显示在盒子里面）    
            5.背景相关属性连写 属性名：background（bgr）：color image repeat position；   
        */
    </script>
    <div>div</div>
    3.<style>
        /* div{
            width: 400px;
            height: 400px;
            background-color: pink;
        } */
        /* 行内元素不可以设置宽高 */
        /* span{
            width: 300px;
            height: 300px;
            background-color: pink;
        } */
        div{
            color: brown;
            font-size: 60px;
        }
    </style>
    <script>
        /*
            1.块级元素   显示特点
             .独占一行（一行只能显示一个）
             .宽度默认是父元素的宽度，高度默认由内容撑开
             .可以设置宽度
             代表标签：div、p、h系列、ul、li、dl、dt、dd、form、header、nav、footer....
            2.行内元素   显示特点
             .一行可以显示多个
             .宽度和高度默认由内容撑开
             .不利于设置高度
             代表标签：a、span、b、u、i、s、strong、ins、em、del....
            3.行内块元素   显示特点
             .一行可以显示多个
             .可以设置宽高
             代表标签：input、textarea、button、select......
             特殊情况：img标签有行内元素特点，但是Chrome调试工具中显示结果是inline
            4.元素显示模式转换  目的：改变元素默认的显示特点，让元素符合布局要求
             .display：block  转换成块级元素 （较多）
             .display：inline-block 转换成行内元素（较多）
             .display：inline 转换成行内元素（极少）
            5.CSS特性 
             （1）继承性 子元素有默认继承父元素样式的特点（子承父业）可以继承常见属性（文字控制属性都可以继承）
                 .color
                 .font-style、font-weight、font-size、font-family
                 .text-indent、text-align
                 .line-height...（可以通过调试工具判断样式是否可以继承）
                 注意：a标签继承不了color  h系列继承不了font-size
             （2）层叠性   特性
                 .给同一个标签设置不同的样式---此样式会层叠叠加---会共同作用在标签上
                 .给同一个标签设置相同的样式---此样式会层叠覆盖---最终写在最后的样式会生效
                 注意：当样式冲突时，只有选择器优先级相同时，才能通过层叠性判断结果

      */
    </script>
    <!-- <div>1111</div>
    <div>2222</div> -->
    <!-- <span>1111</span>
    <span>2222</span> -->
    <div>
        <!-- 这是div标签里的文字
        <span>这是div里面的span</span> -->
        <a href="#">aaaa</a>
        <h1>1111111</h1>
    </div>
    4.综合案例
    <style>
        a{
            /* 取消a标签的下划线 */
            text-decoration: none;
            /* 设置标签的宽度 */
            width: 100px;
            /* 设置标签的高度 */
            height: 60px;
            /* 设置背景颜色 */
            background-color: red;
            /* 转换成行内块元素 */
            display: inline-block;
            /* 字体颜色 */
            color: #fff;
            /* 字体水平居中 */
            text-align: center;
            /* 字体垂直居中 */
            line-height: 50px;

        }
        /* 设置鼠标移动颜色  */
        a:hover{
            background-color: orange;
        }
    </style>
    <body>
   
        <!-- 选多行 alt+Shift+鼠标左键 -->
        <a href="#">导航1</a>
        <a href="#">导航2</a>
        <a href="#">导航3</a>
        <a href="#">导航4</a>
        <a href="#">导航5</a>
  
</body>
